// Code generated by hertz generator.

package api

import (
	"context"
	// "fmt"
	"github.com/1359332949/douyin/cmd/api/biz/model/api"
	"github.com/1359332949/douyin/cmd/api/biz/mw"
	"github.com/1359332949/douyin/cmd/api/biz/rpc"
	"log"
	"github.com/1359332949/douyin/kitex_gen/user"
	// "github.com/1359332949/douyin/kitex_gen/message"
	"github.com/1359332949/douyin/pkg/consts"
	"github.com/1359332949/douyin/pkg/errno"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/utils"
	// "path/filepath"
	// "time"
	// "github.com/aliyun/aliyun-oss-go-sdk/oss"
	// "mime/multipart"
	// "os"
)

// LoginUser .
// @router /douyin/user/login/ [POST]
func LoginUser(ctx context.Context, c *app.RequestContext) {
	mw.JwtMiddleware.LoginHandler(ctx, c)
}

// RegisterUser .
// @router /douyin/user/register/ [POST]
func RegisterUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.RegisterUserRequest
	err = c.BindAndValidate(&req)
	
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}

	err = rpc.RegisterUser(context.Background(), &user.RegisterUserRequest{
		Username: req.Username,
		Password: req.Password,

	})
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}
	SendResponse(c, errno.Success, nil)
}

// UserInfo .
// @router /douyin/user/ [GET]
func UserInfo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.UserInfoRequest
	err = c.BindAndValidate(&req)
	
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}
	v, _ := c.Get(consts.IdentityKey)
	user_info, err := rpc.UserInfo(context.Background(), &user.UserInfoRequest{
		UserId: v.(*api.User).ID,
		Token: req.Token,

	})
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}
	log.Println("***------------------------------------UserInfo-service---------------------------------------***")
	log.Println(user_info)
	Err := errno.ConvertErr(errno.Success)
	c.JSON(200, utils.H{
		"status_code": Err.ErrCode,
		"status_msg":  Err.ErrMsg,
		"user":   user_info,
	})
}
